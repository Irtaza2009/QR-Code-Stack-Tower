data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KICA8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04IiAvPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiIC8+CiAgICA8dGl0bGU+VG93ZXIgU3RhY2s8L3RpdGxlPgogICAgPHN0eWxlPgogICAgICBib2R5IHsKICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgcGFkZGluZzogMDsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgaGVpZ2h0OiAxMDB2aDsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTVkMmUyOyAvKiBQYXN0ZWwgQmx1ZSAtIExpZ2h0ICovCiAgICAgICAgZm9udC1mYW1pbHk6ICJDb3VyaWVyIE5ldyIsIENvdXJpZXIsIG1vbm9zcGFjZTsKICAgICAgfQoKICAgICAgI2dhbWUgewogICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgICB3aWR0aDogMzAwcHg7CiAgICAgICAgaGVpZ2h0OiA1MDBweDsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZiZmMyOyAvKiBQYXN0ZWwgUGluayAtIExpZ2h0ICovCiAgICAgICAgYm9yZGVyOiAycHggc29saWQgIzYzNTI4ZDsgLyogUGFzdGVsIFB1cnBsZSAtIE1lZGl1bSAqLwogICAgICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDsKICAgICAgfQoKICAgICAgI3N0YWNrIHsKICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgYm90dG9tOiAwOwogICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgIGhlaWdodDogMDsKICAgICAgfQoKICAgICAgLmJsb2NrIHsKICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgaGVpZ2h0OiAyMHB4OwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM2ZWM3YmY7IC8qIFBhc3RlbCBUZWFsIC0gTGlnaHQgKi8KICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMzI2YjY2OyAvKiBQYXN0ZWwgVGVhbCAtIE1lZGl1bSAqLwogICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgICAgfQoKICAgICAgI21vdmluZy1ibG9jayB7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIHRvcDogMjBweDsKICAgICAgICB3aWR0aDogNjBweDsKICAgICAgICBoZWlnaHQ6IDIwcHg7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzlmNDg1ZjsgLyogUGFzdGVsIFBpbmsgLSBNZWRpdW0gKi8KICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICAgIH0KCiAgICAgICNzY29yZSB7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIHRvcDogNXB4OwogICAgICAgIGxlZnQ6IDEwcHg7CiAgICAgICAgY29sb3I6ICM0MDY3ODk7IC8qIFBhc3RlbCBCbHVlIC0gTWVkaXVtICovCiAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICB9CgogICAgICAubWVzc2FnZS1ib3ggewogICAgICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgICAgICB0b3A6IDUwJTsKICAgICAgICBsZWZ0OiA1MCU7CiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MSwgMTk5LCAxNzEsIDAuOCk7CiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NiNzY0YzsKICAgICAgICBjb2xvcjogI2MwYTNlMDsKICAgICAgICBmb250LXNpemU6IDE2cHg7CiAgICAgICAgcGFkZGluZzogMjBweDsKICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4OwogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICB6LWluZGV4OiAxMDAwOwogICAgICB9CiAgICA8L3N0eWxlPgogIDwvaGVhZD4KICA8Ym9keT4KICAgIDxkaXYgaWQ9ImdhbWUiPgogICAgICA8ZGl2IGlkPSJzdGFjayI+PC9kaXY+CiAgICAgIDxkaXYgaWQ9Im1vdmluZy1ibG9jayI+PC9kaXY+CiAgICAgIDxkaXYgaWQ9InNjb3JlIj5TY29yZTogMDwvZGl2PgogICAgPC9kaXY+CiAgICA8c2NyaXB0PgogICAgICBjb25zdCBnYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImdhbWUiKTsKICAgICAgY29uc3Qgc3RhY2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic3RhY2siKTsKICAgICAgY29uc3QgbW92aW5nQmxvY2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibW92aW5nLWJsb2NrIik7CiAgICAgIGNvbnN0IHNjb3JlRGlzcGxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzY29yZSIpOwoKICAgICAgbGV0IHNjb3JlID0gMDsKICAgICAgbGV0IG1vdmluZ1JpZ2h0ID0gdHJ1ZTsKICAgICAgbGV0IHNwZWVkID0gMjsKICAgICAgbGV0IGJsb2NrV2lkdGggPSA2MDsKICAgICAgbGV0IGxhc3RCbG9ja0xlZnQgPSAxMjA7CiAgICAgIGxldCBsYXN0QmxvY2tXaWR0aCA9IGJsb2NrV2lkdGg7CgogICAgICBmdW5jdGlvbiBtb3ZlQmxvY2soKSB7CiAgICAgICAgbGV0IHBvc2l0aW9uID0gcGFyc2VJbnQobW92aW5nQmxvY2suc3R5bGUubGVmdCB8fCAiMCIpOwogICAgICAgIGNvbnN0IGdhbWVXaWR0aCA9IGdhbWUub2Zmc2V0V2lkdGg7CgogICAgICAgIGlmIChtb3ZpbmdSaWdodCkgewogICAgICAgICAgcG9zaXRpb24gKz0gc3BlZWQ7CiAgICAgICAgICBpZiAocG9zaXRpb24gKyBibG9ja1dpZHRoID49IGdhbWVXaWR0aCkgewogICAgICAgICAgICBtb3ZpbmdSaWdodCA9IGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwb3NpdGlvbiAtPSBzcGVlZDsKICAgICAgICAgIGlmIChwb3NpdGlvbiA8PSAwKSB7CiAgICAgICAgICAgIG1vdmluZ1JpZ2h0ID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIG1vdmluZ0Jsb2NrLnN0eWxlLmxlZnQgPSBwb3NpdGlvbiArICJweCI7CiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKG1vdmVCbG9jayk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGRyb3BCbG9jaygpIHsKICAgICAgICBjb25zdCBtb3ZpbmdMZWZ0ID0gcGFyc2VJbnQobW92aW5nQmxvY2suc3R5bGUubGVmdCB8fCAiMCIpOwogICAgICAgIGNvbnN0IG92ZXJsYXAgPQogICAgICAgICAgTWF0aC5taW4obGFzdEJsb2NrTGVmdCArIGxhc3RCbG9ja1dpZHRoLCBtb3ZpbmdMZWZ0ICsgYmxvY2tXaWR0aCkgLQogICAgICAgICAgTWF0aC5tYXgobGFzdEJsb2NrTGVmdCwgbW92aW5nTGVmdCk7CgogICAgICAgIGlmIChvdmVybGFwID4gMCkgewogICAgICAgICAgY29uc3QgbmV3QmxvY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICAgIG5ld0Jsb2NrLmNsYXNzTmFtZSA9ICJibG9jayI7CiAgICAgICAgICBuZXdCbG9jay5zdHlsZS5sZWZ0ID0gTWF0aC5tYXgobGFzdEJsb2NrTGVmdCwgbW92aW5nTGVmdCkgKyAicHgiOwogICAgICAgICAgbmV3QmxvY2suc3R5bGUud2lkdGggPSBvdmVybGFwICsgInB4IjsKICAgICAgICAgIG5ld0Jsb2NrLnN0eWxlLmJvdHRvbSA9IHN0YWNrLm9mZnNldEhlaWdodCArICJweCI7CgogICAgICAgICAgc3RhY2suYXBwZW5kQ2hpbGQobmV3QmxvY2spOwogICAgICAgICAgc3RhY2suc3R5bGUuaGVpZ2h0ID0gc3RhY2sub2Zmc2V0SGVpZ2h0ICsgMjAgKyAicHgiOwoKICAgICAgICAgIGxhc3RCbG9ja0xlZnQgPSBNYXRoLm1heChsYXN0QmxvY2tMZWZ0LCBtb3ZpbmdMZWZ0KTsKICAgICAgICAgIGxhc3RCbG9ja1dpZHRoID0gb3ZlcmxhcDsKICAgICAgICAgIGJsb2NrV2lkdGggPSBvdmVybGFwOwoKICAgICAgICAgIHNjb3JlKys7CiAgICAgICAgICBzY29yZURpc3BsYXkuaW5uZXJUZXh0ID0gIlNjb3JlOiAiICsgc2NvcmU7CiAgICAgICAgICBzcGVlZCArPSAwLjE7CgogICAgICAgICAgY29uc3QgZ2FtZUhlaWdodCA9IGdhbWUub2Zmc2V0SGVpZ2h0OwoKICAgICAgICAgIGlmIChzdGFjay5vZmZzZXRIZWlnaHQgKyAyMCA+PSBnYW1lSGVpZ2h0KSB7CiAgICAgICAgICAgIHNob3dNZXNzYWdlKAogICAgICAgICAgICAgICJDb25ncmF0dWxhdGlvbnMhIFlvdSBoYXZlIHJlYWNoZWQgdGhlIHRvcCEgU2NvcmU6ICIgKyBzY29yZQogICAgICAgICAgICApOwogICAgICAgICAgfQoKICAgICAgICAgIG1vdmluZ0Jsb2NrLnN0eWxlLndpZHRoID0gYmxvY2tXaWR0aCArICJweCI7CiAgICAgICAgICBtb3ZpbmdCbG9jay5zdHlsZS5sZWZ0ID0gIjBweCI7CiAgICAgICAgICBtb3ZpbmdCbG9jay5zdHlsZS50b3AgPSBwYXJzZUludChtb3ZpbmdCbG9jay5zdHlsZS50b3ApIC0gMjAgKyAicHgiOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzaG93TWVzc2FnZSgiR2FtZSBPdmVyISBZb3VyIGZpbmFsIHNjb3JlIGlzOiAiICsgc2NvcmUpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigia2V5ZG93biIsIChlKSA9PiB7CiAgICAgICAgaWYgKGUuY29kZSA9PT0gIlNwYWNlIiB8fCBlLmNvZGUgPT09ICJBcnJvd0Rvd24iIHx8IGUuY29kZSA9PT0gIktleVMiKSB7CiAgICAgICAgICBkcm9wQmxvY2soKTsKICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBkcm9wQmxvY2spOwoKICAgICAgZnVuY3Rpb24gc2hvd01lc3NhZ2UobWVzc2FnZSkgewogICAgICAgIGNvbnN0IG1lc3NhZ2VCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICBtZXNzYWdlQm94LmNsYXNzTmFtZSA9ICJtZXNzYWdlLWJveCI7CiAgICAgICAgbWVzc2FnZUJveC5pbm5lclRleHQgPSBtZXNzYWdlOwoKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1lc3NhZ2VCb3gpOwoKICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobWVzc2FnZUJveCk7CiAgICAgICAgICByZXN0YXJ0R2FtZSgpOwogICAgICAgICAgLy9sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICB9LCAzMDAwKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gcmVzdGFydEdhbWUoKSB7CiAgICAgICAgc2NvcmUgPSAwOwogICAgICAgIHNjb3JlRGlzcGxheS5pbm5lclRleHQgPSAiU2NvcmU6IDAiOwogICAgICAgIHN0YWNrLmlubmVySFRNTCA9ICIiOwogICAgICAgIGJsb2NrV2lkdGggPSA2MDsKICAgICAgICBsYXN0QmxvY2tMZWZ0ID0gMTIwOwogICAgICAgIGxhc3RCbG9ja1dpZHRoID0gYmxvY2tXaWR0aDsKICAgICAgICBtb3ZpbmdCbG9jay5zdHlsZS53aWR0aCA9IGJsb2NrV2lkdGggKyAicHgiOwogICAgICAgIG1vdmluZ0Jsb2NrLnN0eWxlLmxlZnQgPSAiMTBweCI7CiAgICAgICAgbW92aW5nQmxvY2suc3R5bGUudG9wID0gIjQwMHB4IjsKICAgICAgICBzcGVlZCA9IDE7CgogICAgICAgIGluaXRHYW1lKCk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGluaXRHYW1lKCkgewogICAgICAgIHN0YWNrLmNsZWFyOwogICAgICAgIGNvbnN0IGluaXRpYWxCbG9jayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgIGluaXRpYWxCbG9jay5jbGFzc05hbWUgPSAiYmxvY2siOwogICAgICAgIGluaXRpYWxCbG9jay5zdHlsZS5sZWZ0ID0gbGFzdEJsb2NrTGVmdCArICJweCI7CiAgICAgICAgaW5pdGlhbEJsb2NrLnN0eWxlLndpZHRoID0gbGFzdEJsb2NrV2lkdGggKyAicHgiOwogICAgICAgIGluaXRpYWxCbG9jay5zdHlsZS5ib3R0b20gPSAiMHB4IjsKICAgICAgICBzdGFjay5hcHBlbmRDaGlsZChpbml0aWFsQmxvY2spOwogICAgICAgIHN0YWNrLnN0eWxlLmhlaWdodCA9ICIyMHB4IjsKICAgICAgICBtb3ZpbmdCbG9jay5zdHlsZS5sZWZ0ID0gIjEwcHgiOwogICAgICAgIG1vdmluZ0Jsb2NrLnN0eWxlLndpZHRoID0gYmxvY2tXaWR0aCArICJweCI7CiAgICAgICAgbW92aW5nQmxvY2suc3R5bGUudG9wID0gIjQwMHB4IjsKICAgICAgICBtb3ZlQmxvY2soKTsKICAgICAgfQoKICAgICAgaW5pdEdhbWUoKTsKICAgIDwvc2NyaXB0PgogIDwvYm9keT4KPC9odG1sPgo=